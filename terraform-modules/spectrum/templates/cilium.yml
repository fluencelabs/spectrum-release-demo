# dashboards:
#   enabled: true
#   label: grafana_dashboard
#   annotations:
#     grafana_folder: Cilium

# prometheus:
#   enabled: true
#   serviceMonitor:
#     enabled: true
#     interval: 30s
#     labels:
#       app.kubernetes.io/part-of: cilium
#       app.kubernetes.io/component: monitoring

operator:
  replicas: 1
  rollOutPods: true

  # prometheus:
  #   enabled: true
  #   serviceMonitor:
  #     enabled: true
  #     interval: 30s
  #     labels:
  #       app.kubernetes.io/part-of: cilium
  #       app.kubernetes.io/component: monitoring
  #
  # dashboards:
  #   enabled: true
  #   label: grafana_dashboard
  #   annotations:
  #     grafana_folder: Cilium

rollOutCiliumPods: true
envoy.rollOutPods: true

ipam:
  mode: kubernetes

kubeProxyReplacement: true

securityContext:
  capabilities:
    ciliumAgent:
      - CHOWN
      - KILL
      - NET_ADMIN
      - NET_RAW
      - IPC_LOCK
      - SYS_ADMIN
      - SYS_RESOURCE
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
    cleanCiliumState:
      - NET_ADMIN
      - SYS_ADMIN
      - SYS_RESOURCE

cgroup:
  autoMount:
    enabled: false
  hostRoot: /sys/fs/cgroup

l2announcements:
  enabled: true

externalIPs:
  enabled: true

socketLB:
  hostNamespaceOnly: true

k8sServiceHost: localhost

k8sClientRateLimit:
  qps: 1000
  burst: 5000
  operator:
    qps: 1000
    burst: 5000

%{ if cluster_flavour == "talos" }
k8sServicePort: 7445
%{ else }
k8sServicePort: 6443
%{ endif }

%{ if hubble_enabled }
hubble:
  enabled: ${hubble_enabled}
  relay:
    enabled: true
    rollOutPods: true
    replicas: 1
  ui:
    enabled: true
    rollOutPods: true
    replicas: 1
%{ endif }
